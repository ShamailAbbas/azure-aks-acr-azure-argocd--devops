trigger:
  branches:
    include:
      - main

variables:
  azureServiceConnection: 'azure-connection'
  dockerServiceConnection: 'acr-connection'
  resourceGroup: 'rg-aks-argocd'
  location: 'East US'
  acrName: 'myacrshamail'
  imageName: 'node-api'
  tag: '$(Build.BuildId)'

pool:
  vmImage: 'ubuntu-latest'

stages:
# ---------------------------------------------------------------------------
# 1. Build + Push Docker Image to ACR
# ---------------------------------------------------------------------------
- stage: Build
  displayName: "Build and Push Docker Image"
  jobs:
    - job: DockerBuild
      displayName: "Build and Push Image to ACR"
      steps:
        - checkout: self

        - task: NodeTool@0
          inputs:
            versionSpec: '20.x'
          displayName: 'Use Node.js 20'

        - script: |
            cd app
            npm install
            echo "‚úÖ Node.js dependencies installed"
          displayName: 'Install Node Dependencies'

        - task: Docker@2
          displayName: 'Build and Push Docker Image'
          inputs:
            command: 'buildAndPush'
            repository: '$(imageName)'
            dockerfile: 'app/Dockerfile'
            containerRegistry: '$(dockerServiceConnection)'
            tags: |
              latest
              $(tag)

# ---------------------------------------------------------------------------
# 2. Update Kubernetes Deployment YAML (GitOps trigger for ArgoCD)
# ---------------------------------------------------------------------------
- stage: UpdateManifest
  displayName: "Update Kubernetes Manifests"
  dependsOn: Build
  jobs:
    - job: UpdateManifest
      displayName: "Commit updated image tag"
      steps:
        - checkout: self
          persistCredentials: true
          clean: true
          fetchDepth: 0

        - task: Bash@3
          displayName: "Update and Push Manifest"
          inputs:
            targetType: 'inline'
            script: |
              set -e

              echo "üß© Configuring Git user"
              git config user.email "devops@yourcompany.com"
              git config user.name "Azure DevOps Pipeline"

              echo "üìÇ Ensuring we're on the correct branch: $BUILD_SOURCEBRANCHNAME"
              git checkout $BUILD_SOURCEBRANCHNAME 2>/dev/null || git checkout -b $BUILD_SOURCEBRANCHNAME
              git pull origin $BUILD_SOURCEBRANCHNAME || echo "No remote changes to pull"

              echo "üîß Updating deployment.yaml with new tag $(tag)"
              sed -i "s|image: .*$(imageName):.*|image: $(acrName).azurecr.io/$(imageName):$(tag)|" app/k8s/deployment.yaml

              # Verify the change was made
              if grep -q "$(acrName).azurecr.io/$(imageName):$(tag)" app/k8s/deployment.yaml; then
                echo "‚úÖ Image tag updated successfully"
                cat app/k8s/deployment.yaml | grep "image:"
              else
                echo "‚ùå Failed to update image tag"
                exit 1
              fi

              echo "üíæ Checking for changes"
              if git diff --quiet app/k8s/deployment.yaml; then
                echo "‚ö†Ô∏è No changes detected in deployment.yaml"
                exit 0
              fi

              echo "üìù Staging and committing changes"
              git add app/k8s/deployment.yaml
              git commit -m "chore: update image tag to $(tag) [skip ci]"

              echo "üöÄ Pushing changes to $BUILD_SOURCEBRANCHNAME"
              git push origin HEAD:$BUILD_SOURCEBRANCHNAME

              echo "‚úÖ Manifest updated and pushed successfully"
